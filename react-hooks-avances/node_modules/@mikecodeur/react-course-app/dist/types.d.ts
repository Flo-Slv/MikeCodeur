/// <reference types="react" />
import type { RequestHandler } from 'msw';
export interface IQuestion {
    question: string;
    options: string[];
    answer: string;
}
export interface IQCMInterface {
    exerciseId: string;
    exerciseTitle: string;
    quiz: IQuestion[];
}
export interface IQCMResult {
    exerciseId: string;
    result: boolean[];
}
declare type DarkModeState = 'dark' | 'light';
declare type SetDarkModeState = React.Dispatch<React.SetStateAction<DarkModeState>>;
declare type ExerciseInfo = {
    id: string;
    title: string;
    description: string;
    number: number;
    exercise: Array<FileInfo>;
    final: Array<FileInfo>;
    instruction: FileInfo;
    next?: ExerciseInfo;
    previous?: ExerciseInfo;
};
declare type FileInfo = {
    title: string;
    description: string;
    id: string;
    fullFilePath: string;
    filePath: string;
    isolatedPath: string;
    ext: string;
    filename: string;
    type: string;
    number: number;
    isExtraCredit: boolean;
    extraCreditNumber?: number;
    extraCreditTitle?: string;
};
declare type NoPropsComponent = () => JSX.Element;
declare type LazyComponents = Record<string, React.LazyExoticComponent<NoPropsComponent> | undefined>;
declare type DynamicImportFn = () => Promise<{
    App?: NoPropsComponent;
    default?: NoPropsComponent;
}>;
declare type DefaultDynamicImportFn = () => Promise<{
    default: NoPropsComponent;
}>;
declare type Imports = Record<string, DynamicImportFn | undefined>;
declare type Backend = {
    handlers: Array<RequestHandler>;
    quiet?: boolean;
    serviceWorker?: {
        url?: string;
    };
    [key: string]: unknown;
};
export type { FileInfo, LazyComponents, Imports, Backend, NoPropsComponent, DynamicImportFn, DefaultDynamicImportFn, ExerciseInfo, DarkModeState, SetDarkModeState, };
