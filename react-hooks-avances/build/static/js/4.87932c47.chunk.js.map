{"version":3,"sources":["final/01.bonus-5.js","../node_modules/react/jsx-runtime.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/big.js/big.js","logic/operate.js","logic/calculate.js","logic/isNumber.js"],"names":["Display","value","className","Button","name","orange","wide","clickHandler","join","trim","onClick","ButtonPanel","handleClick","buttonName","reducer","state","action","App","React","total","next","operation","setState","calculate","module","exports","require","f","g","Fragment","Symbol","h","m","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","n","Object","prototype","hasOwnProperty","p","key","ref","__self","__source","q","c","a","k","b","d","e","l","call","defaultProps","$$typeof","type","props","_owner","current","jsx","jsxs","GLOBAL","Big","MAX_DP","MAX_POWER","NAME","INVALID","INVALID_DP","INVALID_RM","DIV_BY_ZERO","P","UNDEFINED","NUMERIC","round","x","dp","rm","more","xc","i","length","Error","unshift","pop","stringify","id","s","constructor","z","RM","push","NE","PE","charAt","slice","abs","this","cmp","y","isneg","yc","j","div","DP","bl","bt","ri","bz","ai","al","r","rl","qc","qi","shift","eq","gt","gte","lt","lte","minus","sub","t","xlty","plus","xe","ye","reverse","mod","ygtx","times","add","pow","one","sqrt","half","Math","toExponential","indexOf","mul","Array","toFixed","toPrecision","sd","toString","valueOf","toJSON","_Big_","nl","test","replace","search","substring","parse","version","define","operate","numberOne","numberTwo","two","alert","obj","result","includes","parseFloat"],"mappings":"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","file":"static/js/4.87932c47.chunk.js","sourcesContent":["// useReducer\n// 🚀 setState\n// http://localhost:3000/alone/final/01.bonus-5.js\n\nimport * as React from 'react'\nimport calculate from '../logic/calculate'\nimport '../01-styles.css'\n\nfunction Display({value}) {\n  return (\n    <div className=\"component-display\">\n      <div>{value}</div>\n    </div>\n  )\n}\nfunction Button({name, orange, wide, clickHandler}) {\n  const handleClick = () => {\n    clickHandler(name)\n  }\n\n  const className = [\n    'component-button',\n    orange ? 'orange' : '',\n    wide ? 'wide' : '',\n  ]\n  return (\n    <div className={className.join(' ').trim()}>\n      <button onClick={handleClick}>{name}</button>\n    </div>\n  )\n}\nfunction ButtonPanel({clickHandler}) {\n  const handleClick = buttonName => {\n    clickHandler(buttonName)\n  }\n\n  return (\n    <div className=\"component-button-panel\">\n      <div>\n        <Button name=\"AC\" clickHandler={handleClick} />\n        <Button name=\"+/-\" clickHandler={handleClick} />\n        <Button name=\"%\" clickHandler={handleClick} />\n        <Button name=\"÷\" clickHandler={handleClick} orange />\n      </div>\n      <div>\n        <Button name=\"7\" clickHandler={handleClick} />\n        <Button name=\"8\" clickHandler={handleClick} />\n        <Button name=\"9\" clickHandler={handleClick} />\n        <Button name=\"x\" clickHandler={handleClick} orange />\n      </div>\n      <div>\n        <Button name=\"4\" clickHandler={handleClick} />\n        <Button name=\"5\" clickHandler={handleClick} />\n        <Button name=\"6\" clickHandler={handleClick} />\n        <Button name=\"-\" clickHandler={handleClick} orange />\n      </div>\n      <div>\n        <Button name=\"1\" clickHandler={handleClick} />\n        <Button name=\"2\" clickHandler={handleClick} />\n        <Button name=\"3\" clickHandler={handleClick} />\n        <Button name=\"+\" clickHandler={handleClick} orange />\n      </div>\n      <div>\n        <Button name=\"0\" clickHandler={handleClick} wide />\n        <Button name=\".\" clickHandler={handleClick} />\n        <Button name=\"=\" clickHandler={handleClick} orange />\n      </div>\n    </div>\n  )\n}\nconst reducer = (state, action) => ({...state, ...action})\n\nfunction App() {\n  const [state, setState] = React.useReducer(reducer, {\n    total: null,\n    next: null,\n    operation: null,\n  })\n\n  const handleClick = buttonName => {\n    setState(calculate(state, buttonName))\n  }\n\n  return (\n    <div className=\"component-app\">\n      <Display value={state.next || state.total || '0'} />\n      <ButtonPanel clickHandler={handleClick} />\n    </div>\n  )\n}\nexport default App\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","/*\r\n *  big.js v5.2.2\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *  https://github.com/MikeMcl/big.js/LICENCE\r\n */\r\n;(function (GLOBAL) {\r\n  'use strict';\r\n  var Big,\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n    // The default values below must be integers within the stated ranges.\r\n\r\n    /*\r\n     * The maximum number of decimal places (DP) of the results of operations involving division:\r\n     * div and sqrt, and pow with negative exponents.\r\n     */\r\n    DP = 20,          // 0 to MAX_DP\r\n\r\n    /*\r\n     * The rounding mode (RM) used when rounding to the above decimal places.\r\n     *\r\n     *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n     *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n     *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n     *  3  Away from zero.                                  (ROUND_UP)\r\n     */\r\n    RM = 1,             // 0, 1, 2 or 3\r\n\r\n    // The maximum value of DP and Big.DP.\r\n    MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n    // The maximum magnitude of the exponent argument to the pow method.\r\n    MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n    /*\r\n     * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n     * (JavaScript numbers: -7)\r\n     * -1000000 is the minimum recommended exponent value of a Big.\r\n     */\r\n    NE = -7,            // 0 to -1000000\r\n\r\n    /*\r\n     * The positive exponent (PE) at and above which toString returns exponential notation.\r\n     * (JavaScript numbers: 21)\r\n     * 1000000 is the maximum recommended exponent value of a Big.\r\n     * (This limit is not enforced or checked.)\r\n     */\r\n    PE = 21,            // 0 to 1000000\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n    // Error messages.\r\n    NAME = '[big.js] ',\r\n    INVALID = NAME + 'Invalid ',\r\n    INVALID_DP = INVALID + 'decimal places',\r\n    INVALID_RM = INVALID + 'rounding mode',\r\n    DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n    // The shared prototype object.\r\n    P = {},\r\n    UNDEFINED = void 0,\r\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n  /*\r\n   * Create and return a Big constructor.\r\n   *\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        parse(x, n);\r\n      }\r\n\r\n      /*\r\n       * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\r\n       * points to Object.\r\n       */\r\n      x.constructor = Big;\r\n    }\r\n\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.version = '5.2.2';\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    // Minus zero?\r\n    if (n === 0 && 1 / n < 0) n = '-0';\r\n    else if (!NUMERIC.test(n += '')) throw Error(INVALID + 'number');\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of dp decimal places using rounding mode rm.\r\n   * Called by stringify, P.div, P.round and P.sqrt.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * dp {number} Integer, 0 to MAX_DP inclusive.\r\n   * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, dp, rm, more) {\r\n    var xc = x.c,\r\n      i = x.e + dp + 1;\r\n\r\n    if (i < xc.length) {\r\n      if (rm === 1) {\r\n\r\n        // xc[i] is the digit after the digit that may be rounded up.\r\n        more = xc[i] >= 5;\r\n      } else if (rm === 2) {\r\n        more = xc[i] > 5 || xc[i] == 5 &&\r\n          (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\r\n      } else if (rm === 3) {\r\n        more = more || !!xc[0];\r\n      } else {\r\n        more = false;\r\n        if (rm !== 0) throw Error(INVALID_RM);\r\n      }\r\n\r\n      if (i < 1) {\r\n        xc.length = 1;\r\n\r\n        if (more) {\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          x.e = -dp;\r\n          xc[0] = 1;\r\n        } else {\r\n\r\n          // Zero.\r\n          xc[0] = x.e = 0;\r\n        }\r\n      } else {\r\n\r\n        // Remove any digits after the required decimal places.\r\n        xc.length = i--;\r\n\r\n        // Round up?\r\n        if (more) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up.\r\n          for (; ++xc[i] > 9;) {\r\n            xc[i] = 0;\r\n            if (!i--) {\r\n              ++x.e;\r\n              xc.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; !xc[--i];) xc.pop();\r\n      }\r\n    } else if (rm < 0 || rm > 3 || rm !== ~~rm) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   *\r\n   * x {Big}\r\n   * id? {number} Caller id.\r\n   *         1 toExponential\r\n   *         2 toFixed\r\n   *         3 toPrecision\r\n   *         4 valueOf\r\n   * n? {number|undefined} Caller's argument.\r\n   * k? {number|undefined}\r\n   */\r\n  function stringify(x, id, n, k) {\r\n    var e, s,\r\n      Big = x.constructor,\r\n      z = !x.c[0];\r\n\r\n    if (n !== UNDEFINED) {\r\n      if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\r\n        throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\r\n      }\r\n\r\n      x = new Big(x);\r\n\r\n      // The index of the digit that may be rounded up.\r\n      n = k - x.e;\r\n\r\n      // Round?\r\n      if (x.c.length > ++k) round(x, n, Big.RM);\r\n\r\n      // toFixed: recalculate k as x.e may have changed if value rounded up.\r\n      if (id == 2) k = x.e + n + 1;\r\n\r\n      // Append zeros?\r\n      for (; x.c.length < k;) x.c.push(0);\r\n    }\r\n\r\n    e = x.e;\r\n    s = x.c.join('');\r\n    n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n    // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) for (e -= n; e--;) s += '0';\r\n      else if (e < n) s = s.slice(0, e) + '.' + s.slice(e);\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n  */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) throw Error(INVALID_DP);\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) throw Error(DIV_BY_ZERO);\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) return new Big(k * 0);\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      d = dp + (q.e = x.e - y.e) + 1;    // number of digits of the result\r\n\r\n    q.s = k;\r\n    k = d < 0 ? 0 : d;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > d) round(q, dp, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return !this.cmp(y);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n\r\n      // y is non-zero? x is non-zero? Or both are zero.\r\n      return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) throw Error(DIV_BY_ZERO);\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\r\n    if (!xc[0] || !yc[0]) return yc[0] ? y : new Big(xc[0] ? x : a * 0);\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    a = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (b = 0; a; xc[a] %= 10) b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (b) {\r\n      xc.unshift(b);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (a = xc.length; xc[--a] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor(1),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) throw Error(INVALID + 'exponent');\r\n    if (isneg) n = -n;\r\n\r\n    for (;;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded using rounding mode rm\r\n   * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\r\n   * multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   * If rm is not specified, use Big.RM.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\r\n   */\r\n  P.round = function (dp, rm) {\r\n    var Big = this.constructor;\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) throw Error(INVALID_DP);\r\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big(0.5);\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) throw Error(NAME + 'No square root');\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s);\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, Big.DP -= 4, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) return new Big(y.s * 0);\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = (c[j] + b) % 10;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation to dp fixed decimal\r\n   * places and rounded using Big.RM.\r\n   *\r\n   * dp? {number} Integer, 0 to MAX_DP inclusive.\r\n   */\r\n  P.toExponential = function (dp) {\r\n    return stringify(this, 1, dp, dp);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation to dp fixed decimal\r\n   * places and rounded using Big.RM.\r\n   *\r\n   * dp? {number} Integer, 0 to MAX_DP inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp) {\r\n    return stringify(this, 2, dp, this.e + dp);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Integer, 1 to MAX_DP inclusive.\r\n   */\r\n  P.toPrecision = function (sd) {\r\n    return stringify(this, 3, sd, sd - 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toString = function () {\r\n    return stringify(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return stringify(this, 4);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n  // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n  //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n","import Big from 'big.js'\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne || '0')\n  const two = Big(\n    numberTwo || (operation === '÷' || operation === 'x' ? '1' : '0'),\n  ) //If dividing or multiplying, then 1 maintains current value in cases of null\n  if (operation === '+') {\n    return one.plus(two).toString()\n  }\n  if (operation === '-') {\n    return one.minus(two).toString()\n  }\n  if (operation === 'x') {\n    return one.times(two).toString()\n  }\n  if (operation === '÷') {\n    if (two === '0') {\n      alert('Divide by 0 error')\n      return '0'\n    } else {\n      return one.div(two).toString()\n    }\n  }\n  throw Error(`Unknown operation '${operation}'`)\n}\n","import Big from 'big.js'\n\nimport operate from './operate'\nimport isNumber from './isNumber'\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:String      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  //console.log(\"prevous states\",obj)\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    }\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {}\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return {next: obj.next + buttonName}\n      }\n      return {next: buttonName}\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      const next = obj.next === '0' ? buttonName : obj.next + buttonName\n      return {\n        next,\n        total: null,\n      }\n    }\n    return {\n      next: buttonName,\n      total: null,\n    }\n  }\n\n  if (buttonName === '%') {\n    if (obj.operation && obj.next) {\n      const result = operate(obj.total, obj.next, obj.operation)\n      return {\n        total: Big(result).div(Big('100')).toString(),\n        next: null,\n        operation: null,\n      }\n    }\n    if (obj.next) {\n      return {\n        next: Big(obj.next).div(Big('100')).toString(),\n      }\n    }\n    return {}\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      // ignore a . if the next number already has one\n      if (obj.next.includes('.')) {\n        return {}\n      }\n      return {next: obj.next + '.'}\n    }\n    return {next: '0.'}\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      }\n    } else {\n      // '=' with no operation, nothing to do\n      return {}\n    }\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return {next: (-1 * parseFloat(obj.next)).toString()}\n    }\n    if (obj.total) {\n      return {total: (-1 * parseFloat(obj.total)).toString()}\n    }\n    return {}\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    }\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return {operation: buttonName}\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  }\n}\n","export default function isNumber(item) {\n  return /[0-9]+/.test(item)\n}\n"],"sourceRoot":""}