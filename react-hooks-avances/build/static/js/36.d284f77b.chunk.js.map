{"version":3,"sources":["exercise/02.md","../node_modules/@mdx-js/react/dist/esm.js"],"names":["readingTime","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","tableOfContents","id","level","title","children","frontMatter","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","React","createContext","useMDXComponents","contextComponents","useContext","allComponents","DEFAULTS","inlineCode","wrapper","_ref","createElement","Fragment","MDXCreateElement","forwardRef","ref","propComponents","originalType","etc","type","Component","concat","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName"],"mappings":"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","file":"static/js/36.d284f77b.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"5 min read\",\"minutes\":4.225,\"time\":253500,\"words\":845}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"hooks-personnalis√©s--logique-r√©utilisable\"\n    }}>{`Hooks Personnalis√©s : Logique r√©utilisable`}</h1>\n    <h3 {...{\n      \"id\": \"-hooks-personnalis√©s--logique-r√©utilisable\"\n    }}>{`üí° Hooks Personnalis√©s : Logique r√©utilisable`}</h3>\n    <h2 {...{\n      \"id\": \"-tes-notes\"\n    }}>{`üìù Tes notes`}</h2>\n    <p>{`Detaille ce que tu as appris ici\n`}<inlineCode parentName=\"p\">{`src/exercise/02.md`}</inlineCode>{`ou¬†sur¬†une¬†page¬†`}<a parentName=\"p\" {...{\n        \"href\": \"https://go.mikecodeur.com/course-notes-template\"\n      }}>{`Notion`}</a></p>\n    <h2 {...{\n      \"id\": \"comprendre\"\n    }}>{`Comprendre`}</h2>\n    <p>{`Dans une application il arrive souvent que l‚Äôon ai a faire les m√™mes actions\ndans diff√©rentes parties. Prenons un exemple courant, les appels API REST.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>data<span class=\\\"token punctuation\\\">,</span> setData<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n\\nReact<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">fetch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">https://hn.algolia.com/api/v1/search?query=</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>query<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">response</span> <span class=\\\"token operator\\\">=></span> response<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">json</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">json</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">setData</span><span class=\\\"token punctuation\\\">(</span>json<span class=\\\"token punctuation\\\">.</span>hits<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>query<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`On pourrait avoir besoin de faire ces appels dans plusieurs composants. Il\nfaudrait alors dupliquer cette logique partout ou l‚Äôon a besoin de faire ces\nappels API. La maintenance devient compliqu√© et ne respecte pas le principe DRY\n(Don‚Äôt Repeat Yourself). Les Hook personnalis√©s permettent d‚Äôextraire une\nlogique particuliere dans un Hook dans le but de pouvoir la r√©utiliser partout.`}</p>\n    <p><strong parentName=\"p\">{`Qu‚Äôest-ce qu‚Äôun Hook personnalis√© ?`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Une fonction JavaScript`}</li>\n      <li parentName=\"ul\">{`Avec un nom commen√ßant par ‚Äúuse‚Äù`}</li>\n      <li parentName=\"ul\">{`Qui peut appeler d‚Äôautres Hooks`}</li>\n      <li parentName=\"ul\">{`Avoir ses propres states et props`}</li>\n    </ul>\n    <p>{`üìë Le lien vers la doc\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://fr.reactjs.org/docs/hooks-custom.html\"\n      }}>{`des Hooks personnalis√©s`}</a></p>\n    <h2 {...{\n      \"id\": \"exercice\"\n    }}>{`Exercice`}</h2>\n    <p>{`Dans cet exercice nous allons reprendre les appels aux API REST de Marvel et\nconstruire nos propres Hooks Personnalis√©s. Commen√ßons par un Hook simple qui\nnous permettrais de savoir si un personnage Marvel exist que l‚Äôon pourrait\nutiliser comme cela.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> marvelExist <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useMarvelExist</span><span class=\\\"token punctuation\\\">(</span>marvelName<span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"bonus\"\n    }}>{`Bonus`}</h2>\n    <h3 {...{\n      \"id\": \"1--hook-avec-personnage--erreur\"\n    }}>{`1. üöÄ Hook avec Personnage / erreur`}</h3>\n    <p>{`Tu vas devoir faire √©voluer le hook pour pouvoir charger un personnage ou\nindiquer une erreur. Renommons notre Hook comme cela :`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>marvel<span class=\\\"token punctuation\\\">,</span> error<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useFindMarvelByName</span><span class=\\\"token punctuation\\\">(</span>marvelName<span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`Supprime le state `}<inlineCode parentName=\"p\">{`exist`}</inlineCode>{` et utilise plut√¥t 2 states `}<inlineCode parentName=\"p\">{`marvel, error`}</inlineCode>{` que tu\nretourneras du hook avec `}<inlineCode parentName=\"p\">{`return [marvel, error]`}</inlineCode>{`.`}</p>\n    <p>{`L√®ve une erreur si le state `}<inlineCode parentName=\"p\">{`error`}</inlineCode>{` est pr√©sent, il sera catcher par\n`}<inlineCode parentName=\"p\">{`ErrorBoundary`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>marvel<span class=\\\"token punctuation\\\">,</span> error<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useFindMarvelByName</span><span class=\\\"token punctuation\\\">(</span>marvelName<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">throw</span> error\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"2--usereducer\"\n    }}>{`2. üöÄ useReducer`}</h3>\n    <p>{`Plut√¥t que d‚Äôutiliser deux state, combinons les avec useReducer`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">reducer</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">state<span class=\\\"token punctuation\\\">,</span> action</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>action<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>state<span class=\\\"token punctuation\\\">,</span> dispatch<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useReducer</span><span class=\\\"token punctuation\\\">(</span>reducer<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  marvel<span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  error<span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">//... dans useEffect</span>\\n<span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>error<span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>marvel<span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">// return state √† la fin du hook</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`Comme nous affichons un personnage Marvel, tu peux r√©utiliser le composant\n`}<inlineCode parentName=\"p\">{`MarvelPersoView`}</inlineCode>{` du module pr√©c√©dent a la place du nom`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MarvelPersoView</span></span> <span class=\\\"token attr-name\\\">marvel</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>marvel<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"3--type-daction-et-payload\"\n    }}>{`3. üöÄ Type d‚Äôaction et payload`}</h3>\n    <p>{`Plus nous allons avoir de donn√©es : `}<inlineCode parentName=\"p\">{`error`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`marvel`}</inlineCode>{`, etc ‚Ä¶ plus il va\nfalloir les g√©rer individuellement. On voit d√©j√† avant l‚Äôappel API :`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>error<span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>marvel<span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`A la place nous voudrions avoir un action utiliser des types d‚Äôaction avec des\ndonn√©es en payload. Par exemple`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>type<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'fetching'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>type<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'done'</span><span class=\\\"token punctuation\\\">,</span> payload<span class=\\\"token operator\\\">:</span> marvel<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>type<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'fail'</span><span class=\\\"token punctuation\\\">,</span> error<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <ul>\n      <li parentName=\"ul\">{`L‚Äôaction `}<inlineCode parentName=\"li\">{`fetching`}</inlineCode>{` se chargera d‚Äôinitialiser correctement tous les states\n(`}<inlineCode parentName=\"li\">{`error`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`marvel`}</inlineCode>{` √† `}<inlineCode parentName=\"li\">{`null`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\">{`L‚Äôaction `}<inlineCode parentName=\"li\">{`done`}</inlineCode>{` se chargera d‚Äôinitialiser les states `}<inlineCode parentName=\"li\">{`error`}</inlineCode>{` √† `}<inlineCode parentName=\"li\">{`null`}</inlineCode>{` et\n`}<inlineCode parentName=\"li\">{`marvel`}</inlineCode></li>\n      <li parentName=\"ul\">{`L‚Äôaction `}<inlineCode parentName=\"li\">{`fail`}</inlineCode>{` se chargera d‚Äôinitialiser les states\n`}<inlineCode parentName=\"li\">{`error avec le message d'ereur`}</inlineCode>{`et `}<inlineCode parentName=\"li\">{`marvel`}</inlineCode>{` √† `}<inlineCode parentName=\"li\">{`null`}</inlineCode></li>\n    </ul>\n    <p>{`Dans cet exercice tu vas devoir g√©rer cela dans le `}<inlineCode parentName=\"p\">{`reducer`}</inlineCode>{` .`}</p>\n    <h3 {...{\n      \"id\": \"4--g√©rer-le-chargement-avec-un-status\"\n    }}>{`4. üöÄ G√©rer le chargement avec un status`}</h3>\n    <p>{`On voudrait maintenant g√©rer plus finement avec un statut.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`idle`}</inlineCode>{` : situation de base : afficher entrer un nom de Marvel`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fetching`}</inlineCode>{` : quand l‚Äôappel API est en cours : afficher chargement en cours ‚Ä¶`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fail`}</inlineCode>{` : quand une erreur survient : `}<inlineCode parentName=\"li\">{`throw error`}</inlineCode>{` sera g√©rer par\n`}<inlineCode parentName=\"li\">{`ErrorBoundary`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`done`}</inlineCode>{` : afficher le personnage Marvel dans\n`}<inlineCode parentName=\"li\">{`<MarvelPersoView marvel={marvel} />`}</inlineCode></li>\n    </ul>\n    <p>{`Tu vas devoir rajouter `}<inlineCode parentName=\"p\">{`status`}</inlineCode>{` dans le `}<inlineCode parentName=\"p\">{`useReducer`}</inlineCode>{` et le g√©rer dans `}<inlineCode parentName=\"p\">{`reducer`}</inlineCode></p>\n    <p>{`Dans le composant Marvel pour pourra g√©rer plusieurs rendu en fonction du status`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>status <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'fail'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">throw</span> error\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>status <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'idle'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">'enter un nom de Marvel'</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>status <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'fetching'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">'chargement en cours ...'</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>status <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'done'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MarvelPersoView</span></span> <span class=\\\"token attr-name\\\">marvel</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>marvel<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"5--fetch-g√©n√©rique\"\n    }}>{`5. üöÄ Fetch g√©n√©rique`}</h3>\n    <p>{`On voudrait pouvoir r√©utiliser cette logique mais peu importe le type de donn√©es\nr√©cup√©r√©es via des API. Nous allons rendre le hook le plus g√©n√©rique possible.\nRenommer `}<inlineCode parentName=\"p\">{`useFindMarvelByName`}</inlineCode>{` en `}<inlineCode parentName=\"p\">{`useFetchData`}</inlineCode>{` et en ajoutant un param√®tre\n`}<inlineCode parentName=\"p\">{`fetch`}</inlineCode>{` qui contiendra la fonction de fetch (`}<inlineCode parentName=\"p\">{`fetchMarvel`}</inlineCode>{` ou `}<inlineCode parentName=\"p\">{`fetchMarvelList`}</inlineCode>{`\nou autre). On renommera le state `}<inlineCode parentName=\"p\">{`marvel`}</inlineCode>{` en `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` dans le `}<inlineCode parentName=\"p\">{`reducer`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useFetchData</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">search<span class=\\\"token punctuation\\\">,</span> fetch</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">//...</span>\\n  <span class=\\\"token function\\\">fetch</span><span class=\\\"token punctuation\\\">(</span>search<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token comment\\\">//...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`Par composition il est maintenant possible d‚Äôavoir le m√™me hook que pr√©c√©demment\n.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">useFindMarvelByName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">marvelName</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">useFetchData</span><span class=\\\"token punctuation\\\">(</span>marvelName<span class=\\\"token punctuation\\\">,</span> fetchMarvel<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">const</span> state <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useFindMarvelByName</span><span class=\\\"token punctuation\\\">(</span>marvelName<span class=\\\"token punctuation\\\">,</span> fetchMarvelById<span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`Dans cet exercice il va falloir cr√©er un hook `}<inlineCode parentName=\"p\">{`useFindMarvelList`}</inlineCode>{` qui utilise la\nfonction `}<inlineCode parentName=\"p\">{`fetchMarvelsList`}</inlineCode>{` (√† importer depuis `}<inlineCode parentName=\"p\">{`marvel.js`}</inlineCode>{`) et la passe en\nparam√®tre de `}<inlineCode parentName=\"p\">{`useFetchData`}</inlineCode>{`. Ce hook sera appel√© depuis un nouveau composant\n`}<inlineCode parentName=\"p\">{`MarvelList`}</inlineCode>{`. Ajouter une `}<inlineCode parentName=\"p\">{`checkBox`}</inlineCode>{` avec un state `}<inlineCode parentName=\"p\">{`searchList`}</inlineCode>{` et conditionner\nl‚Äôaffichage.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ErrorBoundary</span></span> <span class=\\\"token attr-name\\\">key</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>marvelName<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">FallbackComponent</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>ErrorDisplay<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token punctuation\\\">{</span>searchList <span class=\\\"token operator\\\">?</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MarvelList</span></span> <span class=\\\"token attr-name\\\">marvelName</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>marvelName<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Marvel</span></span> <span class=\\\"token attr-name\\\">marvelName</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>marvelName<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">ErrorBoundary</span></span><span class=\\\"token punctuation\\\">></span></span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`Le `}<inlineCode parentName=\"p\">{`render`}</inlineCode>{` de `}<inlineCode parentName=\"p\">{`MarvelList`}</inlineCode>{` sera comme ceci`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token punctuation\\\">{</span>\\n  data<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">marvel</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>hr</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>background<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'grey'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MarvelPersoView</span></span> <span class=\\\"token attr-name\\\">marvel</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>marvel<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"-feedback\"\n    }}>{`üêú Feedback`}</h2>\n    <p>{`Remplir le formulaire le\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://go.mikecodeur.com/cours-react-avis?entry.1430994900=React%20Hooks%20Avanc%C3%A9s&entry.533578441=02%20Hooks%20Personnalis%C3%A9s%20:%20Logique%20r%C3%A9utilisable\"\n      }}>{`formulaire de FeedBack.`}</a></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"-hooks-personnalis√©s--logique-r√©utilisable\",\n    level: 3,\n    title: \"üí° Hooks Personnalis√©s : Logique r√©utilisable\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"-tes-notes\",\n    level: 2,\n    title: \"üìù Tes notes\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"comprendre\",\n    level: 2,\n    title: \"Comprendre\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"exercice\",\n    level: 2,\n    title: \"Exercice\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"bonus\",\n    level: 2,\n    title: \"Bonus\",\n    children: [\n        {\n              id: \"1--hook-avec-personnage--erreur\",\n              level: 3,\n              title: \"1. üöÄ Hook avec Personnage / erreur\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"2--usereducer\",\n              level: 3,\n              title: \"2. üöÄ useReducer\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"3--type-daction-et-payload\",\n              level: 3,\n              title: \"3. üöÄ Type d‚Äôaction et payload\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"4--g√©rer-le-chargement-avec-un-status\",\n              level: 3,\n              title: \"4. üöÄ G√©rer le chargement avec un status\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"5--fetch-g√©n√©rique\",\n              level: 3,\n              title: \"5. üöÄ Fetch g√©n√©rique\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"-feedback\",\n    level: 2,\n    title: \"üêú Feedback\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n"],"sourceRoot":""}