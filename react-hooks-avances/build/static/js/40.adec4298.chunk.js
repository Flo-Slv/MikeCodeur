(this["webpackJsonp@mikecodeur/react-hooks-avances"]=this["webpackJsonp@mikecodeur/react-hooks-avances"]||[]).push([[40],{251:function(n,a,s){"use strict";s.r(a),s.d(a,"readingTime",(function(){return o})),s.d(a,"default",(function(){return l})),s.d(a,"tableOfContents",(function(){return u})),s.d(a,"frontMatter",(function(){return i}));var t=s(84),e=(s(0),s(328)),p=["components"],o={text:"5 min read",minutes:4.87,time:292200,words:974},c={};function l(n){var a=n.components,s=Object(t.a)(n,p);return Object(e.a)("wrapper",Object.assign({},c,s,{components:a,mdxType:"MDXLayout"}),Object(e.a)("h1",{id:"usecontext"},"useContext"),Object(e.a)("h3",{id:"-comprendre-le-hook-usecontext"},"\ud83d\udca1 comprendre le hook useContext"),Object(e.a)("h2",{id:"-tes-notes"},"\ud83d\udcdd Tes notes"),Object(e.a)("p",null,"Detaille ce que tu as appris ici\n",Object(e.a)("inlineCode",{parentName:"p"},"src/exercise/06.md"),"ou\xa0sur\xa0une\xa0page\xa0",Object(e.a)("a",{parentName:"p",href:"https://go.mikecodeur.com/course-notes-template"},"Notion")),Object(e.a)("h2",{id:"comprendre"},"Comprendre"),Object(e.a)("p",null,"Le hook ",Object(e.a)("inlineCode",{parentName:"p"},"useContext")," accepte un contexte cr\xe9\xe9 par : ",Object(e.a)("inlineCode",{parentName:"p"},"React.createContext")),Object(e.a)("pre",null,Object(e.a)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">const</span> ConfigContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token comment">//...</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigContext.Provider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>timeout<span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Enfants</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ConfigContext.Provider</span></span><span class="token punctuation">></span></span>\n<span class="token comment">//...</span>\n<span class="token comment">// tous les enfants autont acc\xe8s \xe0 la configuration avec le hook</span>\n<span class="token keyword">const</span> config <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useContext</span><span class="token punctuation">(</span>ConfigContext<span class="token punctuation">)</span>\n'}})),Object(e.a)("p",null,"\ud83d\udcd1 Le lien vers la doc\n",Object(e.a)("a",{parentName:"p",href:"https://fr.reactjs.org/docs/hooks-reference.html#usecontext"},"useContext")),Object(e.a)("h2",{id:"exercice"},"Exercice"),Object(e.a)("p",null,"Dans le module ",Object(e.a)("em",{parentName:"p"},"react-patterns")," nous avons vu le pattern ",Object(e.a)("inlineCode",{parentName:"p"},"props drilling"),". Le\nfait de passer toutes les donn\xe9es de ",Object(e.a)("inlineCode",{parentName:"p"},"props")," en ",Object(e.a)("inlineCode",{parentName:"p"},"props")," dans les enfants. Plus\nl\u2019application grossie, plus il y a de donn\xe9es pass\xe9es en ",Object(e.a)("inlineCode",{parentName:"p"},"props")," \xe0 g\xe9rer.\nImaginons que le style de l\u2019application soit g\xe9rer dans un objet ",Object(e.a)("inlineCode",{parentName:"p"},"theme")," au\nniveau du parent le plus haut d\u2019une hi\xe9rarchie de composant complexe."),Object(e.a)("pre",null,Object(e.a)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Parent</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Enfant</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CheckBox</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EnfantA</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EnfantB</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">EnfantB</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">EnfantA</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Enfant</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Parent</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n'}})),Object(e.a)("p",null,"Nous ne voudrions pas avoir a g\xe9rer le ",Object(e.a)("inlineCode",{parentName:"p"},"prop")," th\xe8me (et d\u2019autres donn\xe9es) dans\ntoute la hi\xe9rarchie."),Object(e.a)("pre",null,Object(e.a)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// \u274c a \xe9viter</span>\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token punctuation">{</span>background<span class="token operator">:</span> <span class="token string">\'grey\'</span> <span class="token comment">/*... Amazing theme config*/</span><span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Parent</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Enfant</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CheckBox</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EnfantA</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EnfantB</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">EnfantB</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">EnfantA</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Enfant</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Parent</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n'}})),Object(e.a)("p",null,Object(e.a)("inlineCode",{parentName:"p"},"React.createContext")," et ",Object(e.a)("inlineCode",{parentName:"p"},"useContext")," nous permettent de g\xe9rer cela."),Object(e.a)("pre",null,Object(e.a)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">// \u2705 utilise du context</span>\n<span class="token keyword">const</span> ThemeContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token punctuation">{</span>background<span class="token operator">:</span> <span class="token string">\'grey\'</span> <span class="token comment">/*... Amazing theme config*/</span><span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeContext.Provider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Parent</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Enfant</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CheckBox</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EnfantA</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EnfantB</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n                  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">EnfantB</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n                  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">EnfantA</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Toolbar</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Enfant</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Parent</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ThemeContext.Provider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n'}})),Object(e.a)("p",null,"Le enfants n\u2019ont plus qu\u2019a utiliser ",Object(e.a)("inlineCode",{parentName:"p"},"useContext")," pour acc\xe9der au th\xe8me."),Object(e.a)("pre",null,Object(e.a)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">const</span> theme <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useContext</span><span class="token punctuation">(</span>ThemeContext<span class="token punctuation">)</span>\n'}})),Object(e.a)("p",null,"Dans cet exercice tu vas devoir utiliser l\u2019API ",Object(e.a)("inlineCode",{parentName:"p"},"context")," et ",Object(e.a)("inlineCode",{parentName:"p"},"useContext")," pour\ng\xe9rer le th\xe8me."),Object(e.a)("h2",{id:"bonus"},"Bonus"),Object(e.a)("h3",{id:"1--th\xe8me-modifiable"},"1. \ud83d\ude80 th\xe8me modifiable"),Object(e.a)("p",null,"Nous voulons maintenant que le changement de th\xe8me soit g\xe9r\xe9 dans un composant\n",Object(e.a)("inlineCode",{parentName:"p"},"ThemeProvider")," et accessible depuis les enfants (par exemple dans le composant\n",Object(e.a)("inlineCode",{parentName:"p"},"CheckBox")," etc \u2026)"),Object(e.a)("pre",null,Object(e.a)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeProvider</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CheckBox</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ThemeProvider</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n'}})),Object(e.a)("p",null,"La modification du Theme se fera dans le composant checkbox :"),Object(e.a)("p",null,Object(e.a)("inlineCode",{parentName:"p"},"const [theme, setTheme] = React.useContext(ThemeContext)")," nous donnera acc\xe8s a\n",Object(e.a)("inlineCode",{parentName:"p"},"theme")," mais aussi \xe0 la modification de ",Object(e.a)("inlineCode",{parentName:"p"},"theme")," via ",Object(e.a)("inlineCode",{parentName:"p"},"setTheme"),"."),Object(e.a)("pre",null,Object(e.a)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">function</span> <span class="token function">CheckBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>darkMode<span class="token punctuation">,</span> setDarkMode<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>theme<span class="token punctuation">,</span> setTheme<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useContext</span><span class="token punctuation">(</span>ThemeContext<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleCheck</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setDarkMode</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>checked<span class="token punctuation">)</span>\n    <span class="token function">setTheme</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>checked <span class="token operator">?</span> themes<span class="token punctuation">.</span>dark <span class="token operator">:</span> themes<span class="token punctuation">.</span>light<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>background<span class="token operator">:</span> theme<span class="token punctuation">.</span>background<span class="token punctuation">,</span> color<span class="token operator">:</span> theme<span class="token punctuation">.</span>foreground<span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>darkMode<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleCheck<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">{</span><span class="token string">\' \'</span><span class="token punctuation">}</span><span class="token plain-text">\n      utiliser le DarkMode ?\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n'}})),Object(e.a)("p",null,"On va wrapper ",Object(e.a)("inlineCode",{parentName:"p"},"<ThemeContext.Provider>")," dans un composant appel\xe9\n",Object(e.a)("inlineCode",{parentName:"p"},"ThemeProvider"),". Au lieu de passer en props uniquement ",Object(e.a)("inlineCode",{parentName:"p"},"theme")," , on passera un\nstate qui contient : ",Object(e.a)("inlineCode",{parentName:"p"},"theme")," et ",Object(e.a)("inlineCode",{parentName:"p"},"setTheme"),"."),Object(e.a)("pre",null,Object(e.a)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token comment">//code du ThemeProvider (a cr\xe9\xe9)</span>\n<span class="token keyword">const</span> <span class="token punctuation">[</span>theme<span class="token punctuation">,</span> setTheme<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span>themes<span class="token punctuation">.</span>light<span class="token punctuation">)</span>\n<span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token punctuation">[</span>theme<span class="token punctuation">,</span> setTheme<span class="token punctuation">]</span>\n<span class="token comment">// \xe9quivalent \xe0</span>\n<span class="token comment">// const value = React.useState()</span>\n<span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeContext.Provider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token comment">//...</span>\n<span class="token comment">// cela nous permettra d\'aovir acc\xe8s \xe0 theme/setTheme via useContext</span>\n<span class="token comment">//const [theme, setTheme] = React.useContext(ThemeContext)</span>\n'}})),Object(e.a)("p",null,"Dans cet exercice tu vas devoir cr\xe9\xe9 un composant ",Object(e.a)("inlineCode",{parentName:"p"},"ThemeProvider")," et ``modifier"),Object(e.a)("ul",null,Object(e.a)("li",{parentName:"ul"},Object(e.a)("inlineCode",{parentName:"li"},"App")),Object(e.a)("li",{parentName:"ul"},Object(e.a)("inlineCode",{parentName:"li"},"CheckBox")),Object(e.a)("li",{parentName:"ul"},"Et tous les autres composants qui font appel au th\xe8me")),Object(e.a)("blockquote",null,Object(e.a)("p",{parentName:"blockquote"},"\u26a0\ufe0f Attention : ",Object(e.a)("inlineCode",{parentName:"p"},"React.useContext(ThemeContext)")," retournera maintenant\n",Object(e.a)("inlineCode",{parentName:"p"},"[theme, setTheme]")," et non ",Object(e.a)("inlineCode",{parentName:"p"},"theme"))),Object(e.a)("h3",{id:"2--cr\xe9er-un-hook-consommateur"},"2. \ud83d\ude80 cr\xe9er un hook consommateur"),Object(e.a)("p",null,"L'",Object(e.a)("inlineCode",{parentName:"p"},"api context")," nous permet de cr\xe9er des ",Object(e.a)("inlineCode",{parentName:"p"},"providers")," et des ",Object(e.a)("inlineCode",{parentName:"p"},"consumers"),"\n(consommateurs). Dans cet exercice nous allons cr\xe9er un ",Object(e.a)("em",{parentName:"p"},"consumer hook"),"\n",Object(e.a)("inlineCode",{parentName:"p"},"useTheme"),". Ce hook s\u2019assurera que son utilisation est bien faite \xe0 l\u2019int\xe9rieur\nd\u2019un provider."),Object(e.a)("pre",null,Object(e.a)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Composant</span></span><span class="token punctuation">/></span></span> <span class="token comment">// \u274c useTheme : une erreur doit etre lever car hors context</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeProvider</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CheckBox</span></span> <span class="token punctuation">/></span></span><span class="token plain-text"> // \u2705 useTheme possible\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Toolbar</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ThemeProvider</span></span><span class="token punctuation">></span></span>\n'}})),Object(e.a)("p",null,"Il suffira juste de tester la valeur du ",Object(e.a)("inlineCode",{parentName:"p"},"context")),Object(e.a)("pre",null,Object(e.a)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">function</span> <span class="token function">useTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> context <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useContext</span><span class="token punctuation">(</span>ThemeContext<span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">\'useTheme doit etre dans ThemeProvider\'</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> context\n<span class="token punctuation">}</span>\n'}})),Object(e.a)("h3",{id:"3--mettre-en-cache-avec-lapi-context"},"3. \ud83d\ude80 Mettre en cache avec l\u2019API context"),Object(e.a)("p",null,"Les appels HTTP (API rest \u2026) sont couteux en terme de temps. Il est parfois\nutile de les mettre en m\xe9moire\n",Object(e.a)("a",{parentName:"p",href:"https://fr.wikipedia.org/wiki/M%C3%A9moire_cache"},"cache"),". Dans cet exercice tu\nvas devoir mettre les donn\xe9es en cache lors d\u2019un premier appel d\u2019API sur un nom\nparticulier ex :",Object(e.a)("inlineCode",{parentName:"p"},"fetchMarvel('x-men'"),"). Si un deuxi\xe8me appel doit \xeatre fait avec\nce m\xeame nom, il faudra lire la donn\xe9e dans la m\xe9moire cache du contexte plut\xf4t\nque via l\u2019API Rest. Cela passera par les \xe9tapes suivantes :"),Object(e.a)("ul",null,Object(e.a)("li",{parentName:"ul"},"Cr\xe9ation d\u2019un ",Object(e.a)("inlineCode",{parentName:"li"},"MarvelCacheProvider"),Object(e.a)("ul",{parentName:"li"},Object(e.a)("li",{parentName:"ul"},"Utilisation de ",Object(e.a)("inlineCode",{parentName:"li"},"useReducer")," pour g\xe9rer les donn\xe9es (m\xe9moire cache) en\nfonction d\u2019un ",Object(e.a)("inlineCode",{parentName:"li"},"action.type")),Object(e.a)("li",{parentName:"ul"},"exemple de dispatch :\n",Object(e.a)("inlineCode",{parentName:"li"},"dispatch({type: 'ADD_MARVEL', marvelName, marvelData})")),Object(e.a)("li",{parentName:"ul"},"exemple de dispatch :\n",Object(e.a)("inlineCode",{parentName:"li"},"dispatch({type: 'ADD_MARVEL_LIST', marvelName, marvelData})")))),Object(e.a)("li",{parentName:"ul"},"Cr\xe9ation d\u2019un consumer ",Object(e.a)("inlineCode",{parentName:"li"},"useMarvelCache")),Object(e.a)("li",{parentName:"ul"},"Evolution de ",Object(e.a)("inlineCode",{parentName:"li"},"useFetchData"),Object(e.a)("ul",{parentName:"li"},Object(e.a)("li",{parentName:"ul"},"retourne un fonction ",Object(e.a)("inlineCode",{parentName:"li"},"setData")," qui permet de mettre \xe0 jour la donn\xe9e venant\nde la m\xe9moire cache (au lieu du callback de fetch)"))),Object(e.a)("li",{parentName:"ul"},"Evolution de ",Object(e.a)("inlineCode",{parentName:"li"},"useFindMarvelByName")," et ",Object(e.a)("inlineCode",{parentName:"li"},"useFindMarvelList")," pour g\xe9rer les\ndonn\xe9es de la m\xe9moire cache",Object(e.a)("ul",{parentName:"li"},Object(e.a)("li",{parentName:"ul"},"utilisation du consumer : ",Object(e.a)("inlineCode",{parentName:"li"},"const [cache, dispatch] = useMarvelCache()")),Object(e.a)("li",{parentName:"ul"},"Si donn\xe9e d\xe9j\xe0 en cache (",Object(e.a)("inlineCode",{parentName:"li"},"cache[marvelName]"),") ",Object(e.a)("inlineCode",{parentName:"li"},"setData")," sinon ",Object(e.a)("inlineCode",{parentName:"li"},"fetchMarvel")))),Object(e.a)("li",{parentName:"ul"},"Wrapper avec ",Object(e.a)("inlineCode",{parentName:"li"},"<MarvelCacheProvider>"))),Object(e.a)("h3",{id:"4--g\xe9rer-lexpiration-des-donn\xe9es-en-cache"},"4. \ud83d\ude80 G\xe9rer l\u2019expiration des donn\xe9es en cache"),Object(e.a)("p",null,"La premi\xe8re chose consiste une dur\xe9e de vie TTL (time to live) et de cr\xe9er une\ndate de fin."),Object(e.a)("pre",null,Object(e.a)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">const</span> ttl <span class="token operator">=</span> <span class="token number">1_000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token comment">// 1 heure</span>\n<span class="token keyword">const</span> expire <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> ttl\n'}})),Object(e.a)("p",null,"On va ensuite faire \xe9voluer les donn\xe9es en cache dans le recuder pour stock\xe9 la\ndate expiration"),Object(e.a)("pre",null,Object(e.a)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token operator">...</span>state<span class="token punctuation">,</span> <span class="token punctuation">[</span>action<span class="token punctuation">.</span>marvelName<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span>data<span class="token operator">:</span> action<span class="token punctuation">.</span>marvelData<span class="token punctuation">,</span> expire<span class="token punctuation">}</span><span class="token punctuation">}</span>\n'}})),Object(e.a)("p",null,"Il ne reste plus qu\u2019a se baser sur cette date d\u2019expiration pour rafraichir ou\npas la donn\xe9e."),Object(e.a)("pre",null,Object(e.a)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">[</span>marvelName<span class="token punctuation">]</span><span class="token operator">?.</span>data <span class="token operator">&amp;&amp;</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> cache<span class="token punctuation">[</span>marvelName<span class="token punctuation">]</span><span class="token punctuation">.</span>expire<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">setData</span><span class="token punctuation">(</span>cache<span class="token punctuation">[</span>marvelName<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n'}})),Object(e.a)("h2",{id:"-feedback"},"\ud83d\udc1c Feedback"),Object(e.a)("p",null,"Remplir le formulaire le\n",Object(e.a)("a",{parentName:"p",href:"https://go.mikecodeur.com/cours-react-avis?entry.1430994900=React%20Hooks%20Avanc%C3%A9s&entry.533578441=06%20useContext"},"formulaire de FeedBack.")))}l.isMDXComponent=!0;var u=function(){return[{id:"-comprendre-le-hook-usecontext",level:3,title:"\ud83d\udca1 comprendre le hook useContext",children:[]},{id:"-tes-notes",level:2,title:"\ud83d\udcdd Tes notes",children:[]},{id:"comprendre",level:2,title:"Comprendre",children:[]},{id:"exercice",level:2,title:"Exercice",children:[]},{id:"bonus",level:2,title:"Bonus",children:[{id:"1--th\xe8me-modifiable",level:3,title:"1. \ud83d\ude80 th\xe8me modifiable",children:[]},{id:"2--cr\xe9er-un-hook-consommateur",level:3,title:"2. \ud83d\ude80 cr\xe9er un hook consommateur",children:[]},{id:"3--mettre-en-cache-avec-lapi-context",level:3,title:"3. \ud83d\ude80 Mettre en cache avec l\u2019API context",children:[]},{id:"4--g\xe9rer-lexpiration-des-donn\xe9es-en-cache",level:3,title:"4. \ud83d\ude80 G\xe9rer l\u2019expiration des donn\xe9es en cache",children:[]}]},{id:"-feedback",level:2,title:"\ud83d\udc1c Feedback",children:[]}]},i={}},328:function(n,a,s){"use strict";s.d(a,"a",(function(){return m}));var t=s(0),e=s.n(t);function p(n,a,s){return a in n?Object.defineProperty(n,a,{value:s,enumerable:!0,configurable:!0,writable:!0}):n[a]=s,n}function o(n,a){var s=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(n,a).enumerable}))),s.push.apply(s,t)}return s}function c(n){for(var a=1;a<arguments.length;a++){var s=null!=arguments[a]?arguments[a]:{};a%2?o(Object(s),!0).forEach((function(a){p(n,a,s[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(s)):o(Object(s)).forEach((function(a){Object.defineProperty(n,a,Object.getOwnPropertyDescriptor(s,a))}))}return n}function l(n,a){if(null==n)return{};var s,t,e=function(n,a){if(null==n)return{};var s,t,e={},p=Object.keys(n);for(t=0;t<p.length;t++)s=p[t],a.indexOf(s)>=0||(e[s]=n[s]);return e}(n,a);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(n);for(t=0;t<p.length;t++)s=p[t],a.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(n,s)&&(e[s]=n[s])}return e}var u=e.a.createContext({}),i=function(n){var a=e.a.useContext(u),s=a;return n&&(s="function"===typeof n?n(a):c(c({},a),n)),s},k={inlineCode:"code",wrapper:function(n){var a=n.children;return e.a.createElement(e.a.Fragment,{},a)}},r=e.a.forwardRef((function(n,a){var s=n.components,t=n.mdxType,p=n.originalType,o=n.parentName,u=l(n,["components","mdxType","originalType","parentName"]),r=i(s),m=t,d=r["".concat(o,".").concat(m)]||r[m]||k[m]||p;return s?e.a.createElement(d,c(c({ref:a},u),{},{components:s})):e.a.createElement(d,c({ref:a},u))}));function m(n,a){var s=arguments,t=a&&a.mdxType;if("string"===typeof n||t){var p=s.length,o=new Array(p);o[0]=r;var c={};for(var l in a)hasOwnProperty.call(a,l)&&(c[l]=a[l]);c.originalType=n,c.mdxType="string"===typeof n?n:t,o[1]=c;for(var u=2;u<p;u++)o[u]=s[u];return e.a.createElement.apply(null,o)}return e.a.createElement.apply(null,s)}r.displayName="MDXCreateElement"}}]);
//# sourceMappingURL=40.adec4298.chunk.js.map