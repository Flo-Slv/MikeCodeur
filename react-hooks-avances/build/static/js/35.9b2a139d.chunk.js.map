{"version":3,"sources":["exercise/01.md","../node_modules/@mdx-js/react/dist/esm.js"],"names":["readingTime","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","tableOfContents","id","level","title","children","frontMatter","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","React","createContext","useMDXComponents","contextComponents","useContext","allComponents","DEFAULTS","inlineCode","wrapper","_ref","createElement","Fragment","MDXCreateElement","forwardRef","ref","propComponents","originalType","etc","type","Component","concat","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName"],"mappings":"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","file":"static/js/35.9b2a139d.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"4 min read\",\"minutes\":3.975,\"time\":238500,\"words\":795}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h3 {...{\n      \"id\": \"-comprendre-le-hook-usereducer\"\n    }}>{`üí° Comprendre le Hook useReducer`}</h3>\n    <h2 {...{\n      \"id\": \"-tes-notes\"\n    }}>{`üìù Tes notes`}</h2>\n    <p>{`Detaille ce que tu as appris ici\n`}<inlineCode parentName=\"p\">{`src/exercise/01.md`}</inlineCode>{`ou¬†sur¬†une¬†page¬†`}<a parentName=\"p\" {...{\n        \"href\": \"https://go.mikecodeur.com/course-notes-template\"\n      }}>{`Notion`}</a></p>\n    <h2 {...{\n      \"id\": \"comprendre\"\n    }}>{`Comprendre`}</h2>\n    <p><strong parentName=\"p\">{`1.Qu‚Äôest ce qu‚Äôun r√©ducteur (`}<inlineCode parentName=\"strong\">{`reducer`}</inlineCode>{`) ?`}</strong></p>\n    <p>{`Un ‚Äúr√©ducteur‚Äù est un mot compliqu√© pour dire une fonction qui prend 2 valeurs\net renvoie 1 valeur. Voyons avec la m√©thode `}<inlineCode parentName=\"p\">{`reduce`}</inlineCode>{` disponible sur `}<inlineCode parentName=\"p\">{`Array`}</inlineCode>{` qui\nprend en param√®tre un `}<inlineCode parentName=\"p\">{`reducer.`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">let</span> numbers <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">reducer</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">total<span class=\\\"token punctuation\\\">,</span> number</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> total <span class=\\\"token operator\\\">+</span> number\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">let</span> sum <span class=\\\"token operator\\\">=</span> numbers<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reduce</span><span class=\\\"token punctuation\\\">(</span>reducer<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p><inlineCode parentName=\"p\">{`reduce`}</inlineCode>{` va parcourir chaque √©l√©ment du tableau et appliquer la fonction\n`}<inlineCode parentName=\"p\">{`reducer`}</inlineCode>{` avec la valeur pr√©c√©dente (`}<inlineCode parentName=\"p\">{`return`}</inlineCode>{` ) et la valeur courante.\nConcr√®tent voila ce qu‚Äôil se passe dans notre cas. Le tableau contient 3\n√©l√©ments `}<inlineCode parentName=\"p\">{`[1, 2, 3]`}</inlineCode>{`, le `}<inlineCode parentName=\"p\">{`reducer`}</inlineCode>{` sera appeler 3 fois. La valeur initial est\n√† 0.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`1er passage : `}<inlineCode parentName=\"li\">{`(0, 1`}</inlineCode>{`) retourne 1`}</li>\n      <li parentName=\"ul\">{`2√®me passage : `}<inlineCode parentName=\"li\">{`(1, 2)`}</inlineCode>{` retourne 3`}</li>\n      <li parentName=\"ul\">{`3√®me passage : `}<inlineCode parentName=\"li\">{`(3, 3)`}</inlineCode>{` retourne 6`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`2.`}<inlineCode parentName=\"strong\">{`useReducer`}</inlineCode>{` est plus ou moins le m√™me m√©canisme appliquer √† des states.`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>state<span class=\\\"token punctuation\\\">,</span> dispatch<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useReducer</span><span class=\\\"token punctuation\\\">(</span>reducer<span class=\\\"token punctuation\\\">,</span> initialArg<span class=\\\"token punctuation\\\">,</span> init<span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`La chose la plus importante avec le hook `}<inlineCode parentName=\"p\">{`useReducer`}</inlineCode>{` est le reducer. Il s‚Äôagit\nd‚Äôune fonction qui prend le `}<inlineCode parentName=\"p\">{`state`}</inlineCode>{` initial en entr√©e, une `}<inlineCode parentName=\"p\">{`action`}</inlineCode>{` et qui\nretourne un nouveau state. La signature est : `}<inlineCode parentName=\"p\">{`(state, action) => newStat`}</inlineCode>{`.`}</p>\n    <p>{`üìë Le lien vers\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://fr.reactjs.org/docs/hooks-reference.html#usereducer\"\n      }}>{`useReducer`}</a></p>\n    <h2 {...{\n      \"id\": \"exercice\"\n    }}>{`Exercice`}</h2>\n    <p>{`Dans ce premier exercice tu vas devoir reproduire le comportement du hook\n`}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{` en utilisant `}<inlineCode parentName=\"p\">{`useReducer`}</inlineCode>{`. C‚Äôest √† dire que veut le m√™me comportement\nsur ces 2 hooks.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>count<span class=\\\"token punctuation\\\">,</span> setCount<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token function\\\">setCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token function\\\">setCount</span><span class=\\\"token punctuation\\\">(</span>count <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">//et</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>count<span class=\\\"token punctuation\\\">,</span> setCount<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useReducer</span><span class=\\\"token punctuation\\\">(</span>reducer<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token function\\\">setCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token function\\\">setCount</span><span class=\\\"token punctuation\\\">(</span>count <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`Il va donc falloir se concentrer sur la fonction `}<inlineCode parentName=\"p\">{`reducer`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"bonus\"\n    }}>{`Bonus`}</h2>\n    <h3 {...{\n      \"id\": \"1--ajouter-un-type-daction\"\n    }}>{`1. üöÄ Ajouter un type d‚Äôaction`}</h3>\n    <p>{`Dans cet exercice il va falloir utiliser l'`}<inlineCode parentName=\"p\">{`action`}</inlineCode>{` (le deuxi√®me param√®tre du\n`}<inlineCode parentName=\"p\">{`reducer`}</inlineCode>{`) pour sp√©cifier comment l‚Äôon veut compter. incr√©menter, d√©cr√©menter,\nmettre √† z√©ro. Pour cela on va passer en action un objet `}<inlineCode parentName=\"p\">{`{type: 'DECREMENT'}`}</inlineCode>{`\nou `}<inlineCode parentName=\"p\">{`{type: 'INCREMENT'}`}</inlineCode>{` ou `}<inlineCode parentName=\"p\">{`{type: 'RESET'}`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token function\\\">setCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>type<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'DECREMENT'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token function\\\">setCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>type<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'INCREMENT'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token function\\\">setCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>type<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'RESET'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`Dans cet exercice tu vas devoir impl√©menter le `}<inlineCode parentName=\"p\">{`reducer`}</inlineCode>{` pour incr√©menter/\nd√©cr√©menter / mettre √† z√©ro le state en fonction du type de l‚Äôaction. Utilise 3\nboutons `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{` pour tester les 3 actions avec\n`}<inlineCode parentName=\"p\">{`onClick={() => setCount({type: 'DECREMENT'})`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">reducer</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">state<span class=\\\"token punctuation\\\">,</span> action</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// teste action.type</span>\\n  <span class=\\\"token comment\\\">// applique une op√©ration sur le state (incr√©mentation etc ...)</span>\\n  <span class=\\\"token comment\\\">// return le nouveau state</span>\\n  <span class=\\\"token comment\\\">// ex : return state + 1</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"2--fonction-disptach\"\n    }}>{`2. üöÄ Fonction disptach`}</h3>\n    <p>{`Renommons `}<inlineCode parentName=\"p\">{`setCount`}</inlineCode>{` en `}<inlineCode parentName=\"p\">{`disptach`}</inlineCode>{`. c‚Äôest comme cela que l‚Äôon pr√©sente souvent\nle `}<inlineCode parentName=\"p\">{`useReducer`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>count<span class=\\\"token punctuation\\\">,</span> dispatch<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useReducer</span><span class=\\\"token punctuation\\\">(</span>reducer<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">//...</span>\\nonClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>type<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'INCREMENT'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`Nous voulons √©viter s‚Äôavoir √† r√©utiliser partout dans le code :\n`}<inlineCode parentName=\"p\">{`dispatch({type: 'INCREMENT'})`}</inlineCode>{`. Pour plus de clart√© du code il est possible de\npasser par une `}<inlineCode parentName=\"p\">{`fonction dispatch`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">increment</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>type<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'INCREMENT'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`Dans cet exercice tu vas devoir cr√©er et utiliser les 3 fonctions `}<inlineCode parentName=\"p\">{`disptach`}</inlineCode></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`increment()`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`decrement()`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`reset()`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"3--payload-data\"\n    }}>{`3. üöÄ Payload data`}</h3>\n    <p>{`Un cas d‚Äôutilisation fr√©quent est de passer une valeur utile (`}<inlineCode parentName=\"p\">{`payload`}</inlineCode>{`). Par\nexemple si l‚Äôon veut incr√©menter de 10. exemple : `}<inlineCode parentName=\"p\">{`increment(10)`}</inlineCode>{`. Pour cela il\nsuffit de mettre ce `}<inlineCode parentName=\"p\">{`payload`}</inlineCode>{` dans l‚Äôaction\n`}<inlineCode parentName=\"p\">{`dispatch({type: 'INCREMENT', payload:10).`}</inlineCode>{` Dans cet exercice tu vas devoir\ng√©rer ce `}<inlineCode parentName=\"p\">{`payload`}</inlineCode>{` dans le `}<inlineCode parentName=\"p\">{`reducer`}</inlineCode>{` et les 3 fonctions.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token function\\\">increment</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">//incr√©mente le compteur de 10</span>\\n<span class=\\\"token function\\\">decrement</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">//d√©cremente le compteur de 5</span>\\n<span class=\\\"token function\\\">reset</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// reset</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"4--passer-un-objet-state\"\n    }}>{`4. üöÄ Passer un objet state`}</h3>\n    <p>{`Au lieu d‚Äôavoir une valeur dans le state on pourrait avoir un objet (qui\ncontient d‚Äôautres valeurs). Pour √©viter la confusion entre les noms nous allons\nchanger la d√©claration. renommons `}<inlineCode parentName=\"p\">{`count`}</inlineCode>{` en `}<inlineCode parentName=\"p\">{`state`}</inlineCode>{` et la count sera stoker\ndans le state: `}<inlineCode parentName=\"p\">{`state.count`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>state<span class=\\\"token punctuation\\\">,</span> dispatch<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useReducer</span><span class=\\\"token punctuation\\\">(</span>reducer<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`Fais les modifications dans le reducer pour qu‚Äôil retourne `}<inlineCode parentName=\"p\">{`{count:'new state'}`}</inlineCode>{`\net ailleurs dans le code `}<inlineCode parentName=\"p\">{`state.count`}</inlineCode>{` au lieu de `}<inlineCode parentName=\"p\">{`count`}</inlineCode>{`. N‚Äôoublie pas la\nvaleur par d√©faut`}</p>\n    <h3 {...{\n      \"id\": \"5--simulation-setstate\"\n    }}>{`5. üöÄ Simulation setState`}</h3>\n    <p>{`Dans le module react-hooks dans la section refactoring Classe vers Hook du\nprojet calculette IOS, nous voulions refactorer ceci avec des hooks`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  total<span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  next<span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  operation<span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function-variable function\\\">handleClick</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">buttonName</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">//ceci met a jour les 3 states d'un coup</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">calculate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">,</span> buttonName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">//equivalent √†</span>\\n  <span class=\\\"token comment\\\">//this.setState({total,next,operation}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`Nous avons vu que ceci avait un comportement l√©g√®rement diff√©rent`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>total<span class=\\\"token punctuation\\\">,</span> setTotal<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>next<span class=\\\"token punctuation\\\">,</span> setNext<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>operation<span class=\\\"token punctuation\\\">,</span> setOperation<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">const</span> objCalc <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">calculate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>total<span class=\\\"token punctuation\\\">,</span> next<span class=\\\"token punctuation\\\">,</span> operation<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> buttonName<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token function\\\">setTotal</span><span class=\\\"token punctuation\\\">(</span>objCalc<span class=\\\"token punctuation\\\">.</span>total<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token function\\\">setNext</span><span class=\\\"token punctuation\\\">(</span>objCalc<span class=\\\"token punctuation\\\">.</span>next<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token function\\\">setOperation</span><span class=\\\"token punctuation\\\">(</span>objCalc<span class=\\\"token punctuation\\\">.</span>operation<span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`Dans cette exercice nous allons finir la refactorisation avec un √©quivalent de\n`}<inlineCode parentName=\"p\">{`setState`}</inlineCode>{` via `}<inlineCode parentName=\"p\">{`useReducer`}</inlineCode>{`. Le principe etant de retourner dans le reducer\ntoutes les propri√©t√©s de state et d‚Äôactions.`}</p>\n    <h2 {...{\n      \"id\": \"-feedback\"\n    }}>{`üêú Feedback`}</h2>\n    <p>{`Remplir le formulaire le\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://go.mikecodeur.com/cours-react-avis?entry.1430994900=React%20Hooks%20Avanc%C3%A9s&entry.533578441=01%20useReducer%20:%20Alternative%20%C3%A0%20useState\"\n      }}>{`formulaire de FeedBack.`}</a></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"-comprendre-le-hook-usereducer\",\n    level: 3,\n    title: \"üí° Comprendre le Hook useReducer\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"-tes-notes\",\n    level: 2,\n    title: \"üìù Tes notes\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"comprendre\",\n    level: 2,\n    title: \"Comprendre\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"exercice\",\n    level: 2,\n    title: \"Exercice\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"bonus\",\n    level: 2,\n    title: \"Bonus\",\n    children: [\n        {\n              id: \"1--ajouter-un-type-daction\",\n              level: 3,\n              title: \"1. üöÄ Ajouter un type d‚Äôaction\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"2--fonction-disptach\",\n              level: 3,\n              title: \"2. üöÄ Fonction disptach\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"3--payload-data\",\n              level: 3,\n              title: \"3. üöÄ Payload data\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"4--passer-un-objet-state\",\n              level: 3,\n              title: \"4. üöÄ Passer un objet state\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"5--simulation-setstate\",\n              level: 3,\n              title: \"5. üöÄ Simulation setState\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"-feedback\",\n    level: 2,\n    title: \"üêú Feedback\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n"],"sourceRoot":""}